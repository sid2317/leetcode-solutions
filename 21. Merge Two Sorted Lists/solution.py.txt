class Solution:
    mergedList = None
    tail = None
    head = None
    
    def addNode(self, val: int) -> None:
            self.mergedList = ListNode()
            self.mergedList.val = val
            self.mergedList.next = None
            
            if self.head == None:
                self.head = self.mergedList
                self.tail =  self.head
            else:
                self.tail.next = self.mergedList
                self.tail = self.mergedList
                
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        nextVal = 0
        while(list1!= None and list2!= None):
            if(list1.val < list2.val):
                nextVal = list1.val
                list1 = list1.next
            else:
                nextVal = list2.val
                list2 = list2.next
                
            self.addNode(nextVal)
                
        remainingList = list1 if list1 != None else list2    
        if remainingList!= None:
            if self.head == None:
                self.head = remainingList
            else:
                self.tail.next = remainingList
            
        return self.head